{"version":3,"sources":["actions/constants.js","urlConfig.js","reducers/auth.reducers.js","reducers/user.reducer.js","reducers/product.reducer.js","reducers/category.reducer.js","reducers/order.reducer.js","reducers/page.reducer.js","reducers/index.js","store/index.js","helpers/axios.js","actions/category.action.js","actions/product.action.js","components/Header/index.js","actions/auth.actions.js","components/Layout/index.js","containers/Home/index.js","components/UI/Input/index.js","containers/Signin/index.js","containers/Signup/index.js","actions/user.actions.js","components/HOC/PrivateRoute.js","components/UI/Modal/index.js","containers/Products/index.js","components/UI/Card/index.js","containers/Orders/index.js","actions/order.action.js","containers/Category/components/UpdateCategoriesModal.js","containers/Category/components/AddCategoryModal.js","containers/Category/index.js","helpers/linearCategories.js","containers/NewPage/index.js","actions/page.action.js","App.js","actions/initialData.action.js","serviceWorker.js","index.js"],"names":["authConstants","userContants","categoryConstansts","productConstants","pageConstants","orderConstants","api","initState","token","user","firstName","lastName","email","picture","authenticate","authenticating","loading","error","message","initialState","products","categories","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","type","children","cat","newCategory","push","length","orders","page","rootReducer","combineReducers","auth","state","action","console","log","payload","updatedCategories","product","order","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","localStorage","getItem","axiosIntance","axios","create","baseURL","headers","interceptors","request","use","req","getState","Authorization","response","res","status","clear","dispatch","Promise","reject","getAllCategory","a","get","categoryList","data","getProducts","post","Header","props","useSelector","useDispatch","logout","Navbar","collapseOnSelect","fixed","expand","bg","variant","style","zIndex","Container","fluid","to","className","Toggle","aria-controls","Collapse","id","Nav","onClick","Layout","sidebar","Row","Col","md","exact","marginLeft","paddingTop","Home","Input","input","Form","Group","label","Label","value","onChange","placeholder","options","map","option","index","key","Control","Text","errorMessage","Signin","useState","setEmail","password","setPassword","marginTop","span","offset","onSubmit","e","preventDefault","setItem","JSON","stringify","login","target","Button","Signup","setFirstName","setLastName","useEffect","signup","PrivateRoute","Component","component","rest","NewModal","Modal","size","show","onHide","handleClose","closeButton","Title","modalTitle","Body","Footer","buttons","btn","color","backgroundColor","Products","setName","quantity","setQuantity","price","setPrice","description","setDescription","categoryId","setCategoryId","productPictures","setProductPictures","setShow","productDetailModal","setProductDetailModal","productDetails","setProductDetails","submitProductForm","form","FormData","append","pic","addProduct","then","handleProductPictures","files","handleCloseProductDetailsModal","showProductDetailsModal","display","justifyContent","Table","fontSize","responsive","productId","delete","deleteProductById","createCategoryList","src","img","alt","Card","headerLeft","headerRight","Orders","setType","onOrderUpdate","orderId","updateOrder","orderItem","margin","padding","alignItems","items","item","totalAmount","paymentType","paymentStatus","boxSizing","orderStatus","isCompleted","date","d","Date","getFullYear","getMonth","getDate","formatDate","UpdateCategoriesModal","expandedArray","checkedArray","handleCategoryInput","AddCategoryModal","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","handleCategoryImage","Category","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","setCheckedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","updateCheckedAndExpandedCategories","forEach","find","_index","deleteCategories","ids","checkedIdsArray","concat","result","nodes","renderCategories","onCheck","onExpand","icons","check","uncheck","halfCheck","expandClose","expandOpen","alert","addCategory","updateCategories","updatedCheckedArray","updatedExpandedArray","linearCategories","NewPage","createModal","setCreateModal","title","setTitle","setCategories","desc","setDesc","banners","setBanners","setProducts","onCategoryChange","handleBannerImages","handleProductImages","submitPageForm","banner","createPage","App","parse","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f58d891b.chunk.js","sourcesContent":["export const authConstants = {\n  LOGIN_REQUEST: \"LOGIN_REQUEST\",\n  LOGIN_FAILURE: \"LOGIN_FAILURE\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  LOGOUT_REQUEST: \"LOGOUT_REQUEST\",\n  LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\",\n  LOGOUT_FAILURE: \"LOGOUT_FAILURE\",\n};\n\nexport const userContants = {\n  USER_REGISTER_REQUEST: \"USER_REGISTER_REQUEST\",\n  USER_REGISTER_SUCCESS: \"USER_REGISTER_SUCCESS\",\n  USER_REGISTER_FAILURE: \"USER_REGISTER_FAILURE\",\n};\n\nexport const categoryConstansts = {\n  GET_ALL_CATEGORIES_REQUEST: \"GET_ALL_CATEGORIES_REQUEST\",\n  GET_ALL_CATEGORIES_SUCCESS: \"GET_ALL_CATEGORIES_SUCCESS\",\n  GET_ALL_CATEGORIES_FAILURE: \"GET_ALL_CATEGORIES_FAILURE\",\n  ADD_NEW_CATEGORY_REQUEST: \"ADD_NEW_CATEGORY_REQUEST\",\n  ADD_NEW_CATEGORY_SUCCESS: \"ADD_NEW_CATEGORY_SUCCESS\",\n  ADD_NEW_CATEGORY_FAILURE: \"ADD_NEW_CATEGORY_FAILURE\",\n  UPDATE_CATEGORIES_REQUEST: \"UPDATE_CATEGORIES_REQUEST\",\n  UPDATE_CATEGORIES_SUCCESS: \"UPDATE_CATEGORIES_SUCCESS\",\n  UPDATE_CATEGORIES_FAILURE: \"UPDATE_CATEGORIES_FAILURE\",\n  DELETE_CATEGORIES_REQUEST: \"DELETE_CATEGORIES_REQUEST\",\n  DELETE_CATEGORIES_SUCCESS: \"DELETE_CATEGORIES_SUCCESS\",\n  DELETE_CATEGORIES_FAILURE: \"DELETE_CATEGORIES_FAILURE\",\n};\n\nexport const productConstants = {\n  GET_ALL_PRODUCTS_REQUEST: \"GET_ALL_PRODUCTS_REQUEST\",\n  GET_ALL_PRODUCTS_SUCCESS: \"GET_ALL_PRODUCTS_SUCCESS\",\n  GET_ALL_PRODUCTS_FAILURE: \"GET_ALL_PRODUCTS_FAILURE\",\n\n  DELETE_PRODUCT_BY_ID_REQUEST: \"DELETE_PRODUCT_BY_ID_REQUEST\",\n  DELETE_PRODUCT_BY_ID_SUCCESS: \"DELETE_PRODUCT_BY_ID_SUCCESS\",\n  DELETE_PRODUCT_BY_ID_FAILURE: \"DELETE_PRODUCT_BY_ID_FAILURE\",\n\n  ADD_PRODUCT_REQUEST: \"ADD_PRODUCT_REQUEST\",\n  ADD_PRODUCT_SUCCESS: \"ADD_PRODUCT_REQUEST\",\n  ADD_PRODUCT_FAILURE: \"ADD_PRODUCT_FAILURE\",\n};\n\nexport const initialDataConstants = {\n  GET_ALL_INITIAL_DATA_REQUEST: \"GET_ALL_INITIAL_DATA_REQUEST\",\n  GET_ALL_INITIAL_DATA_SUCCESS: \"GET_ALL_INITIAL_DATA_SUCCESS\",\n  GET_ALL_INITIAL_DATA_FAILURE: \"GET_ALL_INITIAL_DATA_FAILURE\",\n};\n\nexport const pageConstants = {\n  CREATE_PAGE_REQUEST: \"CREATE_PAGE_REQUEST\",\n  CREATE_PAGE_SUCCESS: \"CREATE_PAGE_SUCCESS\",\n  CREATE_PAGE_FAILURE: \"CREATE_PAGE_FAILURE\",\n};\n\nexport const orderConstants = {\n  GET_CUSTOMER_ORDER_REQUEST: \"GET_CUSTOMER_ORDER_REQUEST\",\n  GET_CUSTOMER_ORDER_SUCCESS: \"GET_CUSTOMER_ORDER_SUCCESS\",\n  GET_CUSTOMER_ORDER_FAILURE: \"GET_CUSTOMER_ORDER_FAILURE\",\n\n  UPDATE_CUSTOMER_ORDER_REQUEST: \"UPDATE_CUSTOMER_ORDER_REQUEST\",\n  UPDATE_CUSTOMER_ORDER_SUCCESS: \"UPDATE_CUSTOMER_ORDER_SUCCESS\",\n  UPDATE_CUSTOMER_ORDER_FAILURE: \"UPDATE_CUSTOMER_ORDER_FAILURE\",\n};\n","//const baseUrl = process.env.API || \"https://flipkart-rest-server.herokuapp.com\";\nconst baseUrl = \"http://18.218.3.171\";\n\nexport const api = `${baseUrl}/api`;\n\nexport const generatePublicUrl = (fileName) => {\n  return `${baseUrl}/public/${fileName}`;\n};\n","import { authConstants } from \"../actions/constants\";\n\nconst initState = {\n    token: null,\n    user: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        picture: ''\n    },\n    authenticate: false,\n    authenticating: false,\n    loading: false,\n    error: null,\n    message: ''\n};\n\nexport default (state = initState, action) => {\n\n    console.log(action);\n\n    switch (action.type) {\n        case authConstants.LOGIN_REQUEST:\n            state = {\n                ...state,\n                authenticating: true\n            }\n            break;\n        case authConstants.LOGIN_SUCCESS:\n            state = {\n                ...state,\n                user: action.payload.user,\n                token: action.payload.token,\n                authenticate: true,\n                authenticating: false\n            }\n            break;\n        case authConstants.LOGOUT_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case authConstants.LOGOUT_SUCCESS:\n            state = {\n                ...initState\n            }\n            break;\n        case authConstants.LOGOUT_FAILURE:\n            state = {\n                ...state,\n                error: action.payload.error,\n                loading: false\n            }\n            break;\n\n    }\n\n\n    return state;\n}","import { userContants } from \"../actions/constants\"\n\nconst initState = {\n    error: null,\n    message: '',\n    loading: false\n}\n\nexport default (state = initState, action) => {\n    switch(action.type){\n        case userContants.USER_REGISTER_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case userContants.USER_REGISTER_SUCCESS:\n            state = {\n                ...state,\n                loading: false,\n                message: action.payload.message\n            }\n            break;\n        case userContants.USER_REGISTER_FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n    }\n\n    return state;\n}","import { productConstants } from \"../actions/constants\";\n\nconst initialState = {\n    products: []\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case productConstants.GET_ALL_PRODUCTS_SUCCESS:\n            state = {\n                ...state,\n                products: action.payload.products\n            }\n            break;\n    }\n\n    return state;\n}","import { categoryConstansts } from \"../actions/constants\";\n\nconst initState = {\n    categories: [],\n    loading: false,\n    error: null\n};\n\n\nconst buildNewCategories = (parentId, categories, category) => {\n    let myCategories = [];\n\n    if(parentId == undefined){\n        return [\n            ...categories,\n            {\n                _id: category._id,\n                name: category.name,\n                slug: category.slug,\n                type: category.type,\n                children: []\n            }\n        ];\n    }\n    \n    for(let cat of categories){\n\n        if(cat._id == parentId){\n            const newCategory = {\n                _id: category._id,\n                name: category.name,\n                slug: category.slug,\n                parentId: category.parentId,\n                type: category.type,\n                children: []\n            };\n            myCategories.push({\n                ...cat,\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\n            })\n        }else{\n            myCategories.push({\n                ...cat,\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n            });\n        }\n\n        \n    }\n\n\n    return myCategories;\n}\n\n\nexport default (state = initState, action) => {\n    switch(action.type){\n        case categoryConstansts.GET_ALL_CATEGORIES_SUCCESS:\n            state = {\n                ...state,\n                categories: action.payload.categories\n            }\n            break;\n        case categoryConstansts.ADD_NEW_CATEGORY_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstansts.ADD_NEW_CATEGORY_SUCCESS:\n            const category = action.payload.category;\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n            console.log('updated categoires', updatedCategories);\n            \n            state = {\n                ...state,\n                categories: updatedCategories,\n                loading: false,\n            }\n            break;\n        case categoryConstansts.ADD_NEW_CATEGORY_FAILURE:\n            state = {\n                ...initState,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n        case categoryConstansts.UPDATE_CATEGORIES_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstansts.UPDATE_CATEGORIES_SUCCESS:\n            state = {\n                ...state,\n                loading: false\n            }\n            break;\n        case categoryConstansts.UPDATE_CATEGORIES_FAILURE:\n            state = {\n                ...state,\n                error: action.payload.error,\n                loading: false\n            }\n            break;\n        case categoryConstansts.DELETE_CATEGORIES_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstansts.DELETE_CATEGORIES_SUCCESS:\n            state = {\n                ...state,\n                loading: false\n            }\n            break;\n        case categoryConstansts.DELETE_CATEGORIES_FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n    }\n\n    return state;\n}","import { orderConstants } from \"../actions/constants\";\n\nconst initState = {\n  orders: [],\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case orderConstants.GET_CUSTOMER_ORDER_SUCCESS:\n      state = {\n        ...state,\n        orders: action.payload.orders,\n      };\n      break;\n  }\n\n  return state;\n};\n","import { pageConstants } from \"../actions/constants\"\n\nconst initState = {\n    error: null,\n    loading: false,\n    page: {}\n}\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case pageConstants.CREATE_PAGE_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case pageConstants.CREATE_PAGE_SUCCESS:\n            state = {\n                ...state,\n                loading: false\n            }\n            break;\n        case pageConstants.CREATE_PAGE_FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n    }\n\n    return state;\n}","import authReducer from './auth.reducers';\nimport userReducer from './user.reducer';\nimport productReducer from './product.reducer';\nimport categoryReducer from './category.reducer';\nimport orderReducer from './order.reducer';\nimport pageReducer from './page.reducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    user: userReducer,\n    category: categoryReducer,\n    product: productReducer,\n    order: orderReducer,\n    page: pageReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, composeWithDevTools(\n    applyMiddleware(thunk)\n));\n\nexport default store;","import axios from 'axios';\nimport { api } from '../urlConfig';\nimport store from '../store';\nimport { authConstants } from '../actions/constants';\n\nconst token = window.localStorage.getItem('token');\n\nconst axiosIntance = axios.create({\n    baseURL: api,\n    headers: {\n        'Authorization': token ? `Bearer ${token}` : ''\n    }\n});\n\naxiosIntance.interceptors.request.use((req) => {\n    const { auth } = store.getState();\n    if(auth.token){\n        req.headers.Authorization = `Bearer ${auth.token}`;\n    }\n    return req;\n})\n\naxiosIntance.interceptors.response.use((res) => {\n    return res;\n}, (error) => {\n    console.log(error.response);\n    const status = error.response ? error.response.status : 500;\n    if(status && status === 500){\n        localStorage.clear();\n        store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\n    }\n    return Promise.reject(error);\n})\n\nexport default axiosIntance;","import axios from \"../helpers/axios\";\nimport { categoryConstansts } from \"./constants\";\n\nconst getAllCategory = () => {\n    return async dispatch => {\n\n        dispatch({ type: categoryConstansts.GET_ALL_CATEGORIES_REQUEST });\n        const res = await axios.get(`category/getcategory`);\n        console.log(res);\n        if (res.status === 200) {\n\n            const { categoryList } = res.data;\n\n            dispatch({\n                type: categoryConstansts.GET_ALL_CATEGORIES_SUCCESS,\n                payload: { categories: categoryList }\n            });\n        } else {\n            dispatch({\n                type: categoryConstansts.GET_ALL_CATEGORIES_FAILURE,\n                payload: { error: res.data.error }\n            });\n        }\n\n\n    }\n}\n\nexport const addCategory = (form) => {\n    return async dispatch => {\n        dispatch({ type: categoryConstansts.ADD_NEW_CATEGORY_REQUEST });\n        try {\n            const res = await axios.post(`/category/create`, form);\n            if (res.status === 201) {\n                dispatch({\n                    type: categoryConstansts.ADD_NEW_CATEGORY_SUCCESS,\n                    payload: { category: res.data.category }\n                });\n            } else {\n                dispatch({\n                    type: categoryConstansts.ADD_NEW_CATEGORY_FAILURE,\n                    payload: res.data.error\n                });\n            }\n        } catch (error) {   \n            console.log(error.response);\n        }\n\n    }\n}\n\nexport const updateCategories = (form) => {\n    return async dispatch => {\n        dispatch({ type: categoryConstansts.UPDATE_CATEGORIES_REQUEST });\n        const res = await axios.post(`/category/update`, form);\n        if (res.status === 201) {\n            dispatch({ type: categoryConstansts.UPDATE_CATEGORIES_SUCCESS });\n            dispatch(getAllCategory());\n        } else {\n            const { error } = res.data;\n            dispatch({\n                type: categoryConstansts.UPDATE_CATEGORIES_FAILURE,\n                payload: { error }\n            });\n        }\n    }\n}\n\nexport const deleteCategories = (ids) => {\n    return async dispatch => {\n        dispatch({ type: categoryConstansts.DELETE_CATEGORIES_REQUEST });\n        const res = await axios.post(`/category/delete`, {\n            payload: {\n                ids\n            }\n        });\n        if (res.status == 201) {\n            dispatch(getAllCategory());\n            dispatch({ type: categoryConstansts.DELETE_CATEGORIES_SUCCESS });\n        } else {\n            const { error } = res.data;\n            dispatch({\n                type: categoryConstansts.DELETE_CATEGORIES_FAILURE,\n                payload: { error }\n            });\n        }\n    }\n}\n\nexport {\n    getAllCategory\n}","import axios from \"../helpers/axios\";\nimport { productConstants } from \"./constants\";\n\n// new action\nconst getProducts = () => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: productConstants.GET_ALL_PRODUCTS_REQUEST });\n      const res = await axios.post(`product/getProducts`);\n      if (res.status === 200) {\n        const { products } = res.data;\n        dispatch({\n          type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n          payload: { products },\n        });\n      } else {\n        dispatch({ type: productConstants.GET_ALL_PRODUCTS_FAILURE });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// modified actrion\nexport const addProduct = (form) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: productConstants.ADD_PRODUCT_REQUEST });\n      const res = await axios.post(`product/create`, form);\n      if (res.status === 201) {\n        dispatch({ type: productConstants.ADD_PRODUCT_SUCCESS });\n        dispatch(getProducts());\n      } else {\n        dispatch({ type: productConstants.ADD_PRODUCT_FAILURE });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// new action\nexport const deleteProductById = (payload) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.delete(`product/deleteProductById`, {\n        data: { payload },\n      });\n      dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_REQUEST });\n      if (res.status === 202) {\n        dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_SUCCESS });\n        dispatch(getProducts());\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: productConstants.DELETE_PRODUCT_BY_ID_FAILURE,\n          payload: {\n            error,\n          },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","import React from \"react\";\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signout } from \"../../actions\";\n\n/**\n * @author\n * @function Header\n **/\n\nconst Header = (props) => {\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const logout = () => {\n    dispatch(signout());\n  };\n\n  const renderLoggedInLinks = () => {\n    return (\n      <Nav>\n        <li className=\"nav-item\">\n          <span className=\"nav-link\" onClick={logout}>\n            Signout\n          </span>\n        </li>\n      </Nav>\n    );\n  };\n\n  const renderNonLoggedInLinks = () => {\n    return (\n      <Nav>\n        {/* <Nav.Link href=\"#deets\">Signin</Nav.Link> */}\n        <li className=\"nav-item\">\n          <NavLink to=\"signin\" className=\"nav-link\">\n            Signin\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink to=\"signup\" className=\"nav-link\">\n            Signup\n          </NavLink>\n        </li>\n      </Nav>\n    );\n  };\n\n  return (\n    <Navbar\n      collapseOnSelect\n      fixed=\"top\"\n      expand=\"lg\"\n      bg=\"dark\"\n      variant=\"dark\"\n      style={{ zIndex: 1 }}\n    >\n      <Container fluid>\n        {/* <Navbar.Brand href=\"#home\">Admin Dashboard</Navbar.Brand> */}\n        <Link to=\"/\" className=\"navbar-brand\">\n          Admin Dashboard\n        </Link>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                            </NavDropdown> */}\n          </Nav>\n          {auth.authenticate ? renderLoggedInLinks() : renderNonLoggedInLinks()}\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import { authConstants } from \"./constants\";\nimport axios from \"../helpers/axios\";\n\nexport const login = (user) => {\n\n    console.log(user)\n\n    return async (dispatch) => {\n\n        dispatch({ type: authConstants.LOGIN_REQUEST });\n        const res = await axios.post(`/admin/signin`, {\n            ...user\n        });\n\n        if(res.status === 200){\n            const { token, user } = res.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(user));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token, user\n                }\n            });\n        }else{\n            if(res.status === 400){\n                dispatch({\n                    type: authConstants.LOGIN_FAILURE,\n                    payload: { error: res.data.error }\n                });\n            }\n        }\n    }\n}\n\nexport const isUserLoggedIn = () => {\n    return async dispatch => {\n        const token = localStorage.getItem('token');\n        if(token){\n            const user = JSON.parse(localStorage.getItem('user'));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token, user\n                }\n            });\n        }else{\n            dispatch({\n                type: authConstants.LOGIN_FAILURE,\n                payload: { error: 'Failed to login' }\n            });\n        }\n    }\n}\n\nexport const signout = () => {\n    return async dispatch => {\n\n        dispatch({ type: authConstants.LOGOUT_REQUEST });\n        const res = await axios.post(`/admin/signout`);\n\n        if(res.status === 200){\n            localStorage.clear();\n            dispatch({ type: authConstants.LOGOUT_SUCCESS });\n        }else{\n            dispatch({\n                type: authConstants.LOGOUT_FAILURE,\n                payload: { error: res.data.error }\n            });\n        }\n\n        \n    }\n}","import React from 'react';\nimport Header from '../Header';\nimport { Container, Row, Col } from 'react-bootstrap'; \nimport { NavLink } from 'react-router-dom';\nimport './style.css';\n\n/**\n* @author\n* @function Layout\n**/\n\nconst Layout = (props) => {\n  return(\n    <>\n       <Header />\n       {\n         props.sidebar ?\n         <Container fluid>\n          <Row>\n            <Col md={2} className=\"sidebar\">\n              <ul>\n                <li><NavLink exact to={`/`}>Home</NavLink></li>\n                <li><NavLink to={`/page`}>Page</NavLink></li>\n                <li><NavLink to={`/category`}>Category</NavLink></li>\n                <li><NavLink to={`/products`}>Products</NavLink></li>\n                <li><NavLink to={`/orders`}>Orders</NavLink></li>\n              </ul>\n            </Col>\n            <Col md={10} style={{ marginLeft: 'auto', paddingTop: '60px' }}>\n              {props.children}\n            </Col>\n          </Row>\n        </Container>\n        :\n        props.children\n       }\n        \n        \n    </>\n   )\n\n }\n\nexport default Layout;","import React from 'react';\nimport Layout from '../../components/Layout';\nimport { Jumbotron, Row, Col, Container } from 'react-bootstrap';\nimport './style.css';\nimport { NavLink } from 'react-router-dom';\n\n/**\n* @author\n* @function Home\n**/\n\nconst Home = (props) => {\n\n  return (\n    <Layout sidebar>\n\n      \n      \n  \n\n      {/* <Jumbotron style={{margin: '5rem', background: '#fff'}} className=\"text-center\">\n            <h1>Welcome to Admin Dashboard</h1>\n            <p>It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a sear</p>\n        </Jumbotron> */}\n    </Layout>\n  )\n\n}\n\nexport default Home","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\n/**\n* @author\n* @function Input\n**/\n\nconst Input = (props) => {\n\n  let input = null;\n  switch(props.type){\n    case 'select':\n      input = <Form.Group>\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <select\n                  className=\"form-control form-control-sm\"\n                  value={props.value}\n                  onChange={props.onChange}\n                >\n                  <option value=\"\">{props.placeholder}</option>\n                  {\n                    props.options.length > 0 ?\n                    props.options.map((option, index) =>\n                      <option key={index} value={option.value}>{option.name}</option>\n                    ) : null\n                  }\n                </select>\n            </Form.Group>\n      break;\n    case 'text':\n    default:\n      input = <Form.Group>\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <Form.Control \n                    type={props.type} \n                    placeholder={props.placeholder} \n                    value={props.value}\n                    onChange={props.onChange}\n                    {...props}\n                />\n                <Form.Text className=\"text-muted\">\n                  {props.errorMessage}\n                </Form.Text>\n            </Form.Group>\n  }\n\n\n  return input;\n\n }\n\nexport default Input","import React, { useState, useEffect } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\nimport Input from '../../components/UI/Input';\nimport { login } from '../../actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n/**\n* @author\n* @function Signin\n**/\n\nconst Signin = (props) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const auth = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n\n    \n\n\n    const userLogin = (e) => {\n\n        e.preventDefault();\n\n        const user = {\n            email, password\n        }\n\n        dispatch(login(user));\n    }\n\n    if(auth.authenticate){\n        return <Redirect to={`/home`} />\n    }\n\n    return (\n        <Layout>\n            <Container>\n                <Row style={{ marginTop: '50px' }}>\n                    <Col md={{span: 6, offset: 3}}>\n                        <Form onSubmit={userLogin}>\n                            <Input \n                                label=\"Email\"\n                                placeholder=\"Email\"\n                                value={email}\n                                type=\"email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n\n                            <Input \n                                label=\"Password\"\n                                placeholder=\"Password\"\n                                value={password}\n                                type=\"password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                            <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                            </Button>\n                        </Form>\n                    </Col>\n                </Row>\n                \n            </Container>\n        </Layout>\n    )\n\n}\n\nexport default Signin","import React, { useState } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\nimport Input from \"../../components/UI/Input\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signup } from \"../../actions\";\nimport { useEffect } from \"react\";\n\n/**\n * @author\n * @function Signup\n **/\n\nconst Signup = (props) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const auth = useSelector((state) => state.auth);\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!user.loading) {\n      setFirstName(\"\");\n      setLastName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  }, [user.loading]);\n\n  const userSignup = (e) => {\n    e.preventDefault();\n\n    const user = {\n      firstName,\n      lastName,\n      email,\n      password,\n    };\n\n    dispatch(signup(user));\n  };\n\n  if (auth.authenticate) {\n    return <Redirect to={`/`} />;\n  }\n\n  if (user.loading) {\n    return <p>Loading...!</p>;\n  }\n\n  return (\n    <Layout>\n      <Container>\n        {user.message}\n        <Row style={{ marginTop: \"50px\" }}>\n          <Col md={{ span: 6, offset: 3 }}>\n            <Form onSubmit={userSignup}>\n              <Row>\n                <Col md={6}>\n                  <Input\n                    label=\"First Name\"\n                    placeholder=\"First Name\"\n                    value={firstName}\n                    type=\"text\"\n                    onChange={(e) => setFirstName(e.target.value)}\n                  />\n                </Col>\n                <Col md={6}>\n                  <Input\n                    label=\"Last Name\"\n                    placeholder=\"Last Name\"\n                    value={lastName}\n                    type=\"text\"\n                    onChange={(e) => setLastName(e.target.value)}\n                  />\n                </Col>\n              </Row>\n\n              <Input\n                label=\"Email\"\n                placeholder=\"Email\"\n                value={email}\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n\n              <Input\n                label=\"Password\"\n                placeholder=\"Password\"\n                value={password}\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Signup;\n","import { authConstants, userContants } from \"./constants\";\nimport axios from \"../helpers/axios\";\n\nexport const signup = (user) => {\n\n    console.log(user)\n\n    return async (dispatch) => {\n\n        dispatch({ type: userContants.USER_REGISTER_REQUEST });\n        const res = await axios.post(`/admin/signup`, {\n            ...user\n        });\n\n        if(res.status === 201){\n            const { message } = res.data;\n            dispatch({\n                type: userContants.USER_REGISTER_SUCCESS,\n                payload: {message}\n            });\n        }else{\n            if(res.status === 400){\n                dispatch({\n                    type: userContants.USER_REGISTER_FAILURE,\n                    payload: { error: res.data.error }\n                });\n            }\n        }\n    }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return <Route {...rest} component={(props) => {\n        const token = window.localStorage.getItem('token');\n        if(token){\n            return <Component {...props} />\n        }else{\n            return <Redirect to={`/`} />\n        }\n    }} />\n}\n\nexport default PrivateRoute;","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\n/**\n * @author\n * @function Modal\n **/\n\nconst NewModal = (props) => {\n  return (\n    <Modal size={props.size} show={props.show} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.modalTitle}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{props.children}</Modal.Body>\n      <Modal.Footer>\n        {props.buttons ? (\n          props.buttons.map((btn, index) => (\n            <Button key={index} variant={btn.color} onClick={btn.onClick}>\n              {btn.label}\n            </Button>\n          ))\n        ) : (\n          <Button\n            variant=\"primary\"\n            {...props}\n            style={{ backgroundColor: \"#333\" }}\n            className=\"btn-sm\"\n            onClick={props.onSubmit}\n          >\n            Save\n          </Button>\n        )}\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default NewModal;\n","import React, { useState } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\nimport Input from \"../../components/UI/Input\";\nimport Modal from \"../../components/UI/Modal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addProduct, deleteProductById } from \"../../actions\";\nimport \"./style.css\";\n\n/**\n * @author\n * @function Products\n **/\n\nconst Products = (props) => {\n  const [name, setName] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [productPictures, setProductPictures] = useState([]);\n  const [show, setShow] = useState(false);\n  const [productDetailModal, setProductDetailModal] = useState(false);\n  const [productDetails, setProductDetails] = useState(null);\n  const category = useSelector((state) => state.category);\n  const product = useSelector((state) => state.product);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const submitProductForm = () => {\n    const form = new FormData();\n    form.append(\"name\", name);\n    form.append(\"quantity\", quantity);\n    form.append(\"price\", price);\n    form.append(\"description\", description);\n    form.append(\"category\", categoryId);\n\n    for (let pic of productPictures) {\n      form.append(\"productPicture\", pic);\n    }\n\n    dispatch(addProduct(form)).then(() => setShow(false));\n  };\n  const handleShow = () => setShow(true);\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({ value: category._id, name: category.name });\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleProductPictures = (e) => {\n    setProductPictures([...productPictures, e.target.files[0]]);\n  };\n\n  const renderProducts = () => {\n    return (\n      <Table style={{ fontSize: 12 }} responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Quantity</th>\n            <th>Category</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {product.products.length > 0\n            ? product.products.map((product) => (\n                <tr key={product._id}>\n                  <td>2</td>\n                  <td>{product.name}</td>\n                  <td>{product.price}</td>\n                  <td>{product.quantity}</td>\n                  <td>{product.category.name}</td>\n                  <td>\n                    <button onClick={() => showProductDetailsModal(product)}>\n                      info\n                    </button>\n                    <button\n                      onClick={() => {\n                        const payload = {\n                          productId: product._id,\n                        };\n                        dispatch(deleteProductById(payload));\n                      }}\n                    >\n                      del\n                    </button>\n                  </td>\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </Table>\n    );\n  };\n\n  const renderAddProductModal = () => {\n    return (\n      <Modal\n        show={show}\n        handleClose={handleClose}\n        modalTitle={\"Add New Product\"}\n        onSubmit={submitProductForm}\n      >\n        <Input\n          label=\"Name\"\n          value={name}\n          placeholder={`Product Name`}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <Input\n          label=\"Quantity\"\n          value={quantity}\n          placeholder={`Quantity`}\n          onChange={(e) => setQuantity(e.target.value)}\n        />\n        <Input\n          label=\"Price\"\n          value={price}\n          placeholder={`Price`}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <Input\n          label=\"Description\"\n          value={description}\n          placeholder={`Description`}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <select\n          className=\"form-control\"\n          value={categoryId}\n          onChange={(e) => setCategoryId(e.target.value)}\n        >\n          <option>select category</option>\n          {createCategoryList(category.categories).map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.name}\n            </option>\n          ))}\n        </select>\n        {productPictures.length > 0\n          ? productPictures.map((pic, index) => (\n              <div key={index}>{pic.name}</div>\n            ))\n          : null}\n        <input\n          type=\"file\"\n          name=\"productPicture\"\n          onChange={handleProductPictures}\n        />\n      </Modal>\n    );\n  };\n\n  const handleCloseProductDetailsModal = () => {\n    setProductDetailModal(false);\n  };\n\n  const showProductDetailsModal = (product) => {\n    setProductDetails(product);\n    setProductDetailModal(true);\n  };\n\n  const renderProductDetailsModal = () => {\n    if (!productDetails) {\n      return null;\n    }\n\n    return (\n      <Modal\n        show={productDetailModal}\n        handleClose={handleCloseProductDetailsModal}\n        modalTitle={\"Product Details\"}\n        size=\"lg\"\n      >\n        <Row>\n          <Col md=\"6\">\n            <label className=\"key\">Name</label>\n            <p className=\"value\">{productDetails.name}</p>\n          </Col>\n          <Col md=\"6\">\n            <label className=\"key\">Price</label>\n            <p className=\"value\">{productDetails.price}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"6\">\n            <label className=\"key\">Quantity</label>\n            <p className=\"value\">{productDetails.quantity}</p>\n          </Col>\n          <Col md=\"6\">\n            <label className=\"key\">Category</label>\n            <p className=\"value\">{productDetails.category.name}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <label className=\"key\">Description</label>\n            <p className=\"value\">{productDetails.description}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <label className=\"key\">Product Pictures</label>\n            <div style={{ display: \"flex\" }}>\n              {productDetails.productPictures.map((picture) => (\n                <div className=\"productImgContainer\">\n                  <img src={picture.img} alt=\"\" />\n                </div>\n              ))}\n            </div>\n          </Col>\n        </Row>\n      </Modal>\n    );\n  };\n  return (\n    <Layout sidebar>\n      <Container>\n        <Row>\n          <Col md={12}>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <h3>Products</h3>\n              <button onClick={handleShow}>Add</button>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>{renderProducts()}</Col>\n        </Row>\n      </Container>\n      {renderAddProductModal()}\n      {renderProductDetailsModal()}\n    </Layout>\n  );\n};\n\nexport default Products;\n","import React from \"react\";\nimport \"./style.css\";\n\n/**\n * @author\n * @function Card\n **/\n\nconst Card = (props) => {\n  return (\n    <div className=\"card\" {...props}>\n      {(props.headerLeft || props.headerRight) && (\n        <div className=\"cardHeader\">\n          {props.headerLeft && <div>{props.headerLeft}</div>}\n          {props.headerRight && props.headerRight}\n        </div>\n      )}\n\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateOrder } from \"../../actions\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\n\nimport \"./style.css\";\n\n/**\n * @author\n * @function Orders\n **/\n\nconst Orders = (props) => {\n  const order = useSelector((state) => state.order);\n  const [type, setType] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const onOrderUpdate = (orderId) => {\n    const payload = {\n      orderId,\n      type,\n    };\n    dispatch(updateOrder(payload));\n  };\n\n  const formatDate = (date) => {\n    if (date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n    }\n    return \"\";\n  };\n\n  return (\n    <Layout sidebar>\n      {order.orders.map((orderItem, index) => (\n        <Card\n          style={{\n            margin: \"10px 0\",\n          }}\n          key={index}\n          headerLeft={orderItem._id}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"50px 50px\",\n              alignItems: \"center\",\n            }}\n          >\n            <div>\n              <div className=\"title\">Items</div>\n              {orderItem.items.map((item, index) => (\n                <div className=\"value\" key={index}>\n                  {item.productId.name}\n                </div>\n              ))}\n            </div>\n            <div>\n              <span className=\"title\">Total Price</span>\n              <br />\n              <span className=\"value\">{orderItem.totalAmount}</span>\n            </div>\n            <div>\n              <span className=\"title\">Payment Type</span> <br />\n              <span className=\"value\">{orderItem.paymentType}</span>\n            </div>\n            <div>\n              <span className=\"title\">Payment Status</span> <br />\n              <span className=\"value\">{orderItem.paymentStatus}</span>\n            </div>\n          </div>\n          <div\n            style={{\n              boxSizing: \"border-box\",\n              padding: \"100px\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <div className=\"orderTrack\">\n              {orderItem.orderStatus.map((status) => (\n                <div\n                  className={`orderStatus ${\n                    status.isCompleted ? \"active\" : \"\"\n                  }`}\n                >\n                  <div\n                    className={`point ${status.isCompleted ? \"active\" : \"\"}`}\n                  ></div>\n                  <div className=\"orderInfo\">\n                    <div className=\"status\">{status.type}</div>\n                    <div className=\"date\">{formatDate(status.date)}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* select input to apply order action */}\n            <div\n              style={{\n                padding: \"0 50px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <select onChange={(e) => setType(e.target.value)}>\n                <option value={\"\"}>select status</option>\n                {orderItem.orderStatus.map((status) => {\n                  return (\n                    <>\n                      {!status.isCompleted ? (\n                        <option key={status.type} value={status.type}>\n                          {status.type}\n                        </option>\n                      ) : null}\n                    </>\n                  );\n                })}\n              </select>\n            </div>\n            {/* button to confirm action */}\n\n            <div\n              style={{\n                padding: \"0 50px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <button onClick={() => onOrderUpdate(orderItem._id)}>\n                confirm\n              </button>\n            </div>\n          </div>\n        </Card>\n      ))}\n    </Layout>\n  );\n};\n\nexport default Orders;\n","import axios from \"../helpers/axios\";\nimport { orderConstants } from \"./constants\";\n\nexport const getCustomerOrders = () => {\n  return async (dispatch) => {\n    dispatch({ type: orderConstants.GET_CUSTOMER_ORDER_REQUEST });\n    try {\n      const res = await axios.post(\"/order/getCustomerOrders\");\n      if (res.status === 200) {\n        const { orders } = res.data;\n        dispatch({\n          type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n          payload: { orders },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: orderConstants.GET_CUSTOMER_ORDER_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateOrder = (payload) => {\n  return async (dispatch) => {\n    dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_REQUEST });\n    try {\n      const res = await axios.post(\"/order/update\", payload);\n      if (res.status === 201) {\n        dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_SUCCESS });\n        dispatch(getCustomerOrders());\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: orderConstants.UPDATE_CUSTOMER_ORDER_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","import React from 'react';\nimport Input from '../../../components/UI/Input';\nimport Modal from '../../../components/UI/Modal';\nimport {Row, Col} from 'react-bootstrap';\n\n\nconst UpdateCategoriesModal = (props) => {\n\n    const {\n        show,\n        handleClose,\n        modalTitle,\n        size,\n        expandedArray,\n        checkedArray,\n        handleCategoryInput,\n        categoryList,\n        onSubmit\n    } = props;\n\n    console.log({expandedArray, checkedArray})\n\n    return (\n        <Modal\n            show={show}\n            handleClose={handleClose}\n            onSubmit={onSubmit}\n            modalTitle={modalTitle}\n            size={size}\n        >\n            <Row>\n                <Col>\n                    <h6>Expanded</h6>\n                </Col>\n            </Row>\n            {\n                expandedArray.length > 0 &&\n                expandedArray.map((item, index) =>\n                    <Row key={index}>\n                        <Col>\n                            <Input\n                                value={item.name}\n                                placeholder={`Category Name`}\n                                onChange={(e) => handleCategoryInput('name', e.target.value, index, 'expanded')}\n                            />\n                        </Col>\n                        <Col>\n                            <select\n                                className=\"form-control\"\n                                value={item.parentId}\n                                onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'expanded')}>\n                                <option>select category</option>\n                                {\n                                    categoryList.map(option =>\n                                        <option key={option.value} value={option.value}>{option.name}</option>\n                                    )\n                                }\n                            </select>\n                        </Col>\n                        <Col>\n                            <select\n                                className=\"form-control\"\n                                value={item.type}\n                                onChange={(e) => handleCategoryInput('type', e.target.value, index, 'expanded')}\n                            >\n                                <option value=\"\">Select Type</option>\n                                <option value=\"store\">Store</option>\n                                <option value=\"product\">Product</option>\n                                <option value=\"page\">Page</option>\n                            </select>\n                        </Col>\n                    </Row>\n                )\n            }\n            <h6>Checked Categories</h6>\n            {\n                checkedArray.length > 0 &&\n                checkedArray.map((item, index) =>\n                    <Row key={index}>\n                        <Col>\n                            <Input\n                                value={item.name}\n                                placeholder={`Category Name`}\n                                onChange={(e) => handleCategoryInput('name', e.target.value, index, 'checked')}\n                            />\n                        </Col>\n                        <Col>\n                            <select\n                                className=\"form-control\"\n                                value={item.parentId}\n                                onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'checked')}>\n                                <option>select category</option>\n                                {\n                                    categoryList.map(option =>\n                                        <option key={option.value} value={option.value}>{option.name}</option>\n                                    )\n                                }\n                            </select>\n                        </Col>\n                        <Col>\n                            <select\n                                className=\"form-control\"\n                                value={item.type}\n                                onChange={(e) => handleCategoryInput('type', e.target.value, index, 'checked')}\n                            \n                            >\n                                <option value=\"\">Select Type</option>\n                                <option value=\"store\">Store</option>\n                                <option value=\"product\">Product</option>\n                                <option value=\"page\">Page</option>\n                            </select>\n                        </Col>\n                    </Row>\n                )\n            }\n        </Modal>\n    );\n}\n\nexport default UpdateCategoriesModal;","import React from 'react';\nimport Input from '../../../components/UI/Input';\nimport Modal from '../../../components/UI/Modal';\nimport { Row, Col } from 'react-bootstrap';\n\n\nconst AddCategoryModal = (props) => {\n\n    const {\n        show,\n        handleClose,\n        modalTitle,\n        categoryName,\n        setCategoryName,\n        parentCategoryId,\n        setParentCategoryId,\n        categoryList,\n        handleCategoryImage,\n        onSubmit\n    } = props;\n\n    return (\n        <Modal\n            show={show}\n            handleClose={handleClose}\n            onSubmit={onSubmit}\n            modalTitle={modalTitle}\n        >\n            <Row>\n                <Col>\n                    <Input\n                        value={categoryName}\n                        placeholder={`Category Name`}\n                        onChange={(e) => setCategoryName(e.target.value)}\n                        className=\"form-control-sm\"\n                    />\n                </Col>\n                <Col>\n                    <select\n                        className=\"form-control form-control-sm\"\n                        value={parentCategoryId}\n                        onChange={(e) => setParentCategoryId(e.target.value)}>\n                        <option>select category</option>\n                        {\n                            categoryList.map(option =>\n                                <option key={option.value} value={option.value}>{option.name}</option>)\n                        }\n                    </select>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\n                </Col>\n            </Row>\n\n\n        </Modal>\n    );\n}\n\nexport default AddCategoryModal;","import React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    getAllCategory,\n    addCategory,\n    updateCategories,\n    deleteCategories as deleteCategoriesAction\n} from '../../actions';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport {\n    IoIosCheckboxOutline,\n    IoIosCheckbox,\n    IoIosArrowForward,\n    IoIosArrowDown,\n    IoIosAdd,\n    IoIosTrash,\n    IoIosCloudUpload\n} from 'react-icons/io'\n\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\nimport AddCategoryModal from './components/AddCategoryModal';\nimport './style.css';\n\n/**\n* @author\n* @function Category\n**/\n\nconst Category = (props) => {\n\n    const category = useSelector(state => state.category);\n    const [categoryName, setCategoryName] = useState('');\n    const [parentCategoryId, setParentCategoryId] = useState('');\n    const [categoryImage, setCategoryImage] = useState('');\n    const [show, setShow] = useState(false);\n    const [checked, setChecked] = useState([]);\n    const [expanded, setExpanded] = useState([]);\n    const [checkedArray, setCheckedArray] = useState([]);\n    const [expandedArray, setExpandedArray] = useState([]);\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        if (!category.loading) {\n            setShow(false);\n        }\n\n    }, [category.loading]);\n\n\n    const handleClose = () => {\n\n        const form = new FormData();\n\n        if (categoryName === \"\") {\n            alert('Category name is required');\n            setShow(false);\n            return;\n        }\n\n        form.append('name', categoryName);\n        form.append('parentId', parentCategoryId);\n        form.append('categoryImage', categoryImage);\n        dispatch(addCategory(form));\n        setCategoryName('');\n        setParentCategoryId('');\n        setShow(false);\n    }\n    const handleShow = () => setShow(true);\n\n    const renderCategories = (categories) => {\n        let myCategories = [];\n        for (let category of categories) {\n            myCategories.push(\n                {\n                    label: category.name,\n                    value: category._id,\n                    children: category.children.length > 0 && renderCategories(category.children)\n                }\n            );\n        }\n        return myCategories;\n    }\n\n    const createCategoryList = (categories, options = []) => {\n\n        for (let category of categories) {\n            options.push({\n                value: category._id,\n                name: category.name,\n                parentId: category.parentId,\n                type: category.type\n            });\n            if (category.children.length > 0) {\n                createCategoryList(category.children, options)\n            }\n        }\n\n        return options;\n    }\n\n    const handleCategoryImage = (e) => {\n        setCategoryImage(e.target.files[0]);\n    }\n\n    const updateCategory = () => {\n        updateCheckedAndExpandedCategories();\n        setUpdateCategoryModal(true);\n    }\n\n    const updateCheckedAndExpandedCategories = () => {\n        const categories = createCategoryList(category.categories);\n        const checkedArray = [];\n        const expandedArray = [];\n        checked.length > 0 && checked.forEach((categoryId, index) => {\n            const category = categories.find((category, _index) => categoryId == category.value);\n            category && checkedArray.push(category);\n        })\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\n            const category = categories.find((category, _index) => categoryId == category.value);\n            category && expandedArray.push(category);\n        })\n        setCheckedArray(checkedArray);\n        setExpandedArray(expandedArray);\n    }\n\n    const handleCategoryInput = (key, value, index, type) => {\n        console.log(value);\n        if (type == \"checked\") {\n            const updatedCheckedArray = checkedArray.map((item, _index) =>\n                index == _index ? { ...item, [key]: value } : item);\n            setCheckedArray(updatedCheckedArray);\n        } else if (type == \"expanded\") {\n            const updatedExpandedArray = expandedArray.map((item, _index) =>\n                index == _index ? { ...item, [key]: value } : item);\n            setExpandedArray(updatedExpandedArray);\n        }\n    }\n\n    const updateCategoriesForm = () => {\n        const form = new FormData();\n\n        expandedArray.forEach((item, index) => {\n            form.append('_id', item.value);\n            form.append('name', item.name);\n            form.append('parentId', item.parentId ? item.parentId : \"\");\n            form.append('type', item.type);\n        });\n        checkedArray.forEach((item, index) => {\n            form.append('_id', item.value);\n            form.append('name', item.name);\n            form.append('parentId', item.parentId ? item.parentId : \"\");\n            form.append('type', item.type);\n        });\n        dispatch(updateCategories(form));\n        \n    }\n\n    const deleteCategory = () => {\n        updateCheckedAndExpandedCategories();\n        setDeleteCategoryModal(true);\n    }\n\n    const deleteCategories = () => {\n        const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\n        const expandedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\n        const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n        if (checkedIdsArray.length > 0) {\n            dispatch(deleteCategoriesAction(checkedIdsArray))\n                .then(result => {\n                    if (result) {\n                        dispatch(getAllCategory())\n                        setDeleteCategoryModal(false)\n                    }\n                });\n        }\n\n        setDeleteCategoryModal(false);\n\n\n    }\n\n    const renderDeleteCategoryModal = () => {\n        return (\n            <Modal\n                modalTitle=\"Confirm\"\n                show={deleteCategoryModal}\n                handleClose={() => setDeleteCategoryModal(false)}\n                buttons={[\n                    {\n                        label: 'No',\n                        color: 'primary',\n                        onClick: () => {\n                            alert('no');\n                        }\n                    },\n                    {\n                        label: 'Yes',\n                        color: 'danger',\n                        onClick: deleteCategories\n                    }\n                ]}\n            >\n\n\n                <h5>Expanded</h5>\n                { expandedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n                <h5>Checked</h5>\n                { checkedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n\n            </Modal>\n        );\n    }\n\n    const categoryList = createCategoryList(category.categories);\n\n    return (\n        <Layout sidebar>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <h3>Category</h3>\n                            <div className=\"actionBtnContainer\">\n                                <span>Actions: </span>\n                                <button onClick={handleShow}><IoIosAdd /> <span>Add</span></button>\n                                <button onClick={deleteCategory}><IoIosTrash /> <span>Delete</span></button>\n                                <button onClick={updateCategory}><IoIosCloudUpload /> <span>Edit</span></button>\n                            </div>\n\n                        </div>\n\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12}>\n                        <CheckboxTree\n                            nodes={renderCategories(category.categories)}\n                            checked={checked}\n                            expanded={expanded}\n                            onCheck={checked => setChecked(checked)}\n                            onExpand={expanded => setExpanded(expanded)}\n                            icons={{\n                                check: <IoIosCheckbox />,\n                                uncheck: <IoIosCheckboxOutline />,\n                                halfCheck: <IoIosCheckboxOutline />,\n                                expandClose: <IoIosArrowForward />,\n                                expandOpen: <IoIosArrowDown />\n                            }}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n            <AddCategoryModal\n                show={show}\n                handleClose={() => setShow(false)}\n                onSubmit={handleClose}\n                modalTitle={'Add New Category'}\n                categoryName={categoryName}\n                setCategoryName={setCategoryName}\n                parentCategoryId={parentCategoryId}\n                setParentCategoryId={setParentCategoryId}\n                categoryList={categoryList}\n                handleCategoryImage={handleCategoryImage}\n            />\n            <UpdateCategoriesModal\n                show={updateCategoryModal}\n                handleClose={() => setUpdateCategoryModal(false)}\n                onSubmit={updateCategoriesForm}\n                modalTitle={'Update Categories'}\n                size=\"lg\"\n                expandedArray={expandedArray}\n                checkedArray={checkedArray}\n                handleCategoryInput={handleCategoryInput}\n                categoryList={categoryList}\n            />\n            {/* {renderAddCategoryModal()} */}\n            {renderDeleteCategoryModal()}\n        </Layout>\n    )\n\n}\n\nexport default Category","const linearCategories = (categories, options = []) => {\n\n    for (let category of categories) {\n        options.push({ \n            value: category._id, \n            name: category.name, \n            parentId: category.parentId,\n            type: category.type\n        });\n        if (category.children.length > 0) {\n            linearCategories(category.children, options)\n        }\n    }\n\n    return options;\n}\n\nexport default linearCategories;","import React, { useState, useEffect } from 'react';\nimport Modal from '../../components/UI/Modal';\nimport Layout from '../../components/Layout';\nimport Input from '../../components/UI/Input';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport linearCategories from '../../helpers/linearCategories';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createPage } from '../../actions';\n\n/**\n* @author\n* @function NewPage\n**/\n\nconst NewPage = (props) => {\n\n    const [createModal, setCreateModal] = useState(false);\n    const [title, setTitle] = useState('');\n    const category = useSelector(state => state.category);\n    const [categories, setCategories] = useState([]);\n    const [categoryId, setCategoryId] = useState('');\n    const [desc, setDesc] = useState('');\n    const [type, setType] = useState('');\n    const [banners, setBanners] = useState([]);\n    const [products, setProducts] = useState([]);\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.page);\n\n\n    useEffect(() => {\n        setCategories(linearCategories(category.categories));\n    }, [category]);\n\n    useEffect(() => {\n        console.log(page);\n        if(!page.loading){\n            setCreateModal(false);\n            setTitle('');\n            setCategoryId('');\n            setDesc('');\n            setProducts([]);\n            setBanners([]);\n        }\n    }, [page]);\n\n    const onCategoryChange = (e) => {\n        const category = categories.find(category => category.value == e.target.value);\n        setCategoryId(e.target.value);\n        setType(category.type);\n    }\n\n    const handleBannerImages = (e) => {\n        console.log(e);\n        setBanners([...banners, e.target.files[0]]);\n    }\n\n    const handleProductImages = (e) => {\n        console.log(e);\n        setProducts([...products, e.target.files[0]]);\n    }\n\n    const submitPageForm = (e) => {\n        //e.target.preventDefault();\n\n        if(title === \"\"){\n            alert('Title is required');\n            setCreateModal(false);\n            return;\n        }\n\n        const form = new FormData();\n        form.append('title', title);\n        form.append('description', desc);\n        form.append('category', categoryId);\n        form.append('type', type);\n        banners.forEach((banner, index) => {\n            form.append('banners', banner);\n        });\n        products.forEach((product, index) => {\n            form.append('products', product);\n        });\n\n        dispatch(createPage(form));\n\n        \n    }\n\n    const renderCreatePageModal = () => {\n        return (\n            <Modal\n                show={createModal}\n                modalTitle={'Create New Page'}\n                handleClose={() => setCreateModal(false)}\n                onSubmit={submitPageForm}\n            >\n                <Container>\n                    <Row>\n                        <Col>\n                            {/* <select\n                                className=\"form-control\"\n                                value={categoryId}\n                                onChange={onCategoryChange}\n                            >\n                                <option value=\"\">select category</option>\n                                {\n                                    categories.map(cat =>\n                                        <option key={cat._id} value={cat._id}>{cat.name}</option>\n                                    )\n                                }\n                            </select> */}\n                            <Input \n                                type=\"select\"\n                                value={categoryId}\n                                onChange={onCategoryChange}\n                                options={categories}\n                                placeholder={'Select Category'}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Input\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                placeholder={'Page Title'}\n                                className=\"\"\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Input\n                                value={desc}\n                                onChange={(e) => setDesc(e.target.value)}\n                                placeholder={'Page Desc'}\n                                className=\"\"\n                            />\n                        </Col>\n                    </Row>\n\n                    {\n                            banners.length > 0 ? \n                            banners.map((banner, index) => \n                                <Row key={index}>\n                                    <Col>{banner.name}</Col>\n                                </Row>\n                            ) : null\n                    }\n                    <Row>\n                        <Col>\n                            <Input\n                                className=\"form-control\" \n                                type=\"file\" \n                                name=\"banners\"\n                                onChange={handleBannerImages}\n                            />\n                        </Col>\n                    </Row>\n\n                    {\n                            products.length > 0 ? \n                            products.map((product, index) => \n                                <Row key={index}>\n                                    <Col>{product.name}</Col>\n                                </Row>\n                            ) : null\n                        }\n                    <Row>\n                        <Col>\n                            <Input \n                                className=\"form-control\"\n                                type=\"file\" \n                                name=\"products\"\n                                onChange={handleProductImages}\n                            />\n                        </Col>\n                    </Row>\n\n                    \n\n                </Container>\n\n\n            </Modal>\n        );\n    }\n\n\n    return (\n        <Layout sidebar>\n            {\n                page.loading ? \n                <p>Creating Page...please wait</p>\n                :\n                <>\n                    {renderCreatePageModal()}\n                    <button onClick={() => setCreateModal(true)}>Create Page</button>\n                </>\n            }\n            \n        </Layout>\n    )\n\n}\n\nexport default NewPage","import axios from \"../helpers/axios\";\nimport { pageConstants } from \"./constants\";\n\nexport const createPage = (form) => {\n    return async dispatch => {\n        dispatch({ type: pageConstants.CREATE_PAGE_REQUEST });\n        try{\n            const res = await axios.post('/page/create', form);\n            if(res.status === 201){\n                dispatch({\n                    type: pageConstants.CREATE_PAGE_SUCCESS,\n                    payload: { page: res.data.page }\n                });\n            }else{\n                dispatch({\n                    type: pageConstants.CREATE_PAGE_FAILURE,\n                    payload: { error: res.data.error }\n                });\n            }\n        }catch(error){\n            console.log(error)\n        }\n    }\n}","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './containers/Home';\nimport Signin from './containers/Signin';\nimport Signup from './containers/Signup';\nimport PrivateRoute from './components/HOC/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isUserLoggedIn, getInitialData } from './actions';\nimport Products from './containers/Products';\nimport Orders from './containers/Orders';\nimport Category from './containers/Category';\nimport NewPage from './containers/NewPage';\n\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth)\n\n\n  //componentDidMount or componentDidUpdate\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n    if(auth.authenticate){\n      dispatch(getInitialData());\n    }\n    \n\n  }, [auth.authenticate]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <PrivateRoute path=\"/home\" component={Home} />\n        <PrivateRoute path=\"/page\" component={NewPage} />\n        <PrivateRoute path=\"/category\" component={Category} />\n        <PrivateRoute path=\"/products\" component={Products} />\n        <PrivateRoute path=\"/orders\" component={Orders} />\n        \n\n\n        <Route path=\"/\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  initialDataConstants,\n  categoryConstansts,\n  productConstants,\n  orderConstants,\n} from \"./constants\";\nimport axios from \"../helpers/axios\";\n\nexport const getInitialData = () => {\n  return async (dispatch) => {\n    const res = await axios.post(`/initialData`);\n    if (res.status === 200) {\n      const { categories, products, orders } = res.data;\n      dispatch({\n        type: categoryConstansts.GET_ALL_CATEGORIES_SUCCESS,\n        payload: { categories },\n      });\n      dispatch({\n        type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n        payload: { products },\n      });\n      dispatch({\n        type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n        payload: { orders },\n      });\n    }\n    console.log(res);\n  };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}